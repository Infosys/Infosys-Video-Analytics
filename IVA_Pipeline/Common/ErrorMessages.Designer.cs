/*=============================================================================================================== *
 * Copyright 2024 Infosys Ltd.                                                                                    *
 * Use of this source code is governed by Apache License Version 2.0 that can be found in the LICENSE file or at  *
 * http://www.apache.org/licenses/                                                                                *
 * ===============================================================================================================*/

ï»¿//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Infosys.Solutions.Ainauto.VideoAnalytics.Infrastructure.Common {
    using System;
    
   
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class ErrorMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ErrorMessages() {
        }
        
        
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Infosys.Solutions.Ainauto.VideoAnalytics.Infrastructure.Common.ErrorMessages", typeof(ErrorMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
       
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        

        public static string CrawlerMultipleInstanceError {
            get {
                return ResourceManager.GetString("CrawlerMultipleInstanceError", resourceCulture);
            }
        }
        
     
        public static string Critical {
            get {
                return ResourceManager.GetString("Critical", resourceCulture);
            }
        }
        
        
        public static string Data_Format_Error {
            get {
                return ResourceManager.GetString("Data_Format_Error", resourceCulture);
            }
        }
        
        
        public static string Data_NotFound {
            get {
                return ResourceManager.GetString("Data_NotFound", resourceCulture);
            }
        }
        
        
        public static string Document_Upload_Failed {
            get {
                return ResourceManager.GetString("Document_Upload_Failed", resourceCulture);
            }
        }
        
      
        public static string Duplicate_IPAddress {
            get {
                return ResourceManager.GetString("Duplicate_IPAddress", resourceCulture);
            }
        }
        
       
        public static string Duplicate_RobotName {
            get {
                return ResourceManager.GetString("Duplicate_RobotName", resourceCulture);
            }
        }
       
        public static string Duplicate_TaskType_Name {
            get {
                return ResourceManager.GetString("Duplicate_TaskType_Name", resourceCulture);
            }
        }
        
       
        public static string Exception_Failed {
            get {
                return ResourceManager.GetString("Exception_Failed", resourceCulture);
            }
        }
        
       
        public static string InCorrectCompanyId {
            get {
                return ResourceManager.GetString("InCorrectCompanyId", resourceCulture);
            }
        }
        
     
        public static string InCorrectIpAddress {
            get {
                return ResourceManager.GetString("InCorrectIpAddress", resourceCulture);
            }
        }
        
      
        public static string InvalidCharacter_Validation {
            get {
                return ResourceManager.GetString("InvalidCharacter_Validation", resourceCulture);
            }
        }
        
        
        public static string JobAllocationError {
            get {
                return ResourceManager.GetString("JobAllocationError", resourceCulture);
            }
        }
        
        
        public static string JobConfiguration_ATRCreation_Failed {
            get {
                return ResourceManager.GetString("JobConfiguration_ATRCreation_Failed", resourceCulture);
            }
        }
        
       
        public static string JobNotFound {
            get {
                return ResourceManager.GetString("JobNotFound", resourceCulture);
            }
        }
        
      
        public static string Method_Input_Parameters_Invalid {
            get {
                return ResourceManager.GetString("Method_Input_Parameters_Invalid", resourceCulture);
            }
        }
        
        
        public static string Method_Returned_Null {
            get {
                return ResourceManager.GetString("Method_Returned_Null", resourceCulture);
            }
        }
        
       
        public static string NoTaskAssociated {
            get {
                return ResourceManager.GetString("NoTaskAssociated", resourceCulture);
            }
        }
        
        
        public static string PKandRK_Validation_Failed {
            get {
                return ResourceManager.GetString("PKandRK_Validation_Failed", resourceCulture);
            }
        }
        
       
        public static string Platform_Data_NotFound {
            get {
                return ResourceManager.GetString("Platform_Data_NotFound", resourceCulture);
            }
        }
        
        
        public static string RemediatioPlan_NotFound {
            get {
                return ResourceManager.GetString("RemediatioPlan_NotFound", resourceCulture);
            }
        }
        
       
        public static string Request_Parameters_Invalid {
            get {
                return ResourceManager.GetString("Request_Parameters_Invalid", resourceCulture);
            }
        }
        
      
        public static string RobotAllocationUnsuccessful {
            get {
                return ResourceManager.GetString("RobotAllocationUnsuccessful", resourceCulture);
            }
        }
        
       
        public static string RobotInstanceAlreadyRunning {
            get {
                return ResourceManager.GetString("RobotInstanceAlreadyRunning", resourceCulture);
            }
        }
        
        
        public static string RobotNotAvailable {
            get {
                return ResourceManager.GetString("RobotNotAvailable", resourceCulture);
            }
        }
        
       
        public static string SEE_Response_Null {
            get {
                return ResourceManager.GetString("SEE_Response_Null", resourceCulture);
            }
        }
        
        
        public static string Standard_Error {
            get {
                return ResourceManager.GetString("Standard_Error", resourceCulture);
            }
        }
        
        
        public static string TaskRunModeMismatch {
            get {
                return ResourceManager.GetString("TaskRunModeMismatch", resourceCulture);
            }
        }
        
        
        public static string Validation_Errors {
            get {
                return ResourceManager.GetString("Validation_Errors", resourceCulture);
            }
        }
        
        
        public static string Value_NullOrEmpty_Error {
            get {
                return ResourceManager.GetString("Value_NullOrEmpty_Error", resourceCulture);
            }
        }
        
        
        public static string ValuesInsertionUnsuccessful {
            get {
                return ResourceManager.GetString("ValuesInsertionUnsuccessful", resourceCulture);
            }
        }
        
       
        public static string ValueUpdationUnsuccessful {
            get {
                return ResourceManager.GetString("ValueUpdationUnsuccessful", resourceCulture);
            }
        }
        
        
        public static string ViewExecutionUnsuccessful {
            get {
                return ResourceManager.GetString("ViewExecutionUnsuccessful", resourceCulture);
            }
        }
    }
}
